name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Setup Postgres
        env:
          PGPASSWORD: postgres
          PGHOSTADDR: 127.0.0.1
        run: |
          psql -c 'create database django;' -U postgres
          psql -c 'create database django_test;' -U postgres
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache pip packages
        uses: actions/cache@v4
        env:
          cache-name: cache-pip-packages
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: |
          npm install
          pip install -r requirements/dev.txt
          pip install coveralls
      - name: Run Tests
        env:
          PGPASSWORD: postgres
          PGHOSTADDR: 127.0.0.1
        run: |
          DJANGO_SETTINGS_MODULE='tests.project.travis' py.test --cov
          python manage.py makemigrations --dry-run --check --noinput
          isort --diff -c adhocracy4 tests
          flake8 adhocracy4 tests --exclude migrations,settings
          npm run lint
      - name: Run Frontend Tests
        run: |
          npm test
      - name: Coveralls Python
        uses: coverallsapp/github-action@v2
        with:
          flag-name: python
          parallel: true
          file: .coverage
      - name: Coveralls JS
        uses: coverallsapp/github-action@v2
        with:
          flag-name: js
          parallel: true
          file: coverage/lcov.info
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
          carryforward: "python,js"
