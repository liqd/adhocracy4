# Generated by Django 4.2.17 on 2025-05-26 13:12

import adhocracy4.images.fields
import adhocracy4.images.validators
import adhocracy4.projects.enums
import adhocracy4.projects.models
import autoslug.fields
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
import django_enumfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("auth", "0001_initial"),
        ("a4administrative_districts", "0001_initial"),
        migrations.swappable_dependency(settings.A4_ORGANISATIONS_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="Modified"
                    ),
                ),
                (
                    "contact_address_text",
                    models.TextField(blank=True, verbose_name="Postal address"),
                ),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="Contact person"
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone numbers can only contain digits, spaces and the following characters: -, +, (, ). It has to be between 8 and 20 characters long.",
                                regex="^[\\d\\+\\(\\)\\- ]{8,20}$",
                            )
                        ],
                        verbose_name="Phone",
                    ),
                ),
                ("contact_url", models.URLField(blank=True, verbose_name="Website")),
                (
                    "point",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True,
                        help_text="Locate your project. Click inside the marked area or type in an address to set the marker. A set marker can be dragged when pressed.",
                        null=True,
                        srid=4326,
                        verbose_name="Can your project be located on the map?",
                    ),
                ),
                (
                    "street_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "house_number",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("zip_code", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=True, populate_from="name", unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="This title will appear on the teaser card and on top of the project detail page. It should be max. 120 characters long",
                        max_length=120,
                        verbose_name="Title of your project",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="This short description will appear on the header of the project and in the teaser. It should briefly state the goal of the project in max. 250 chars.",
                        max_length=250,
                        verbose_name="Short description of your project",
                    ),
                ),
                (
                    "information",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True,
                        validators=[
                            adhocracy4.images.validators.ImageAltTextValidator()
                        ],
                        verbose_name="Description of your project",
                    ),
                ),
                (
                    "result",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True,
                        validators=[
                            adhocracy4.images.validators.ImageAltTextValidator()
                        ],
                        verbose_name="Results of your project",
                    ),
                ),
                (
                    "access",
                    django_enumfield.db.fields.EnumField(
                        default=1, enum=adhocracy4.projects.enums.Access
                    ),
                ),
                ("is_draft", models.BooleanField(default=True)),
                (
                    "image",
                    adhocracy4.images.fields.ConfiguredImageField(
                        "heroimage",
                        blank=True,
                        help_prefix="The image will be shown as a decorative background image.",
                        max_length=300,
                        upload_to="projects/backgrounds/%Y/%m/%d/",
                        verbose_name="Header image",
                    ),
                ),
                (
                    "image_copyright",
                    adhocracy4.images.fields.ImageCopyrightField(
                        blank=True,
                        help_text="Copyright shown in the Header image.",
                        max_length=120,
                        verbose_name="Header image copyright",
                    ),
                ),
                (
                    "image_alt_text",
                    adhocracy4.images.fields.ImageAltTextField(
                        blank=True,
                        help_text="An alternate text serves as a textual description of the image content and is read out by screen readers. Describe the image in max. 80 characters. Example: A busy square with people in summer.",
                        max_length=80,
                        verbose_name="Header image alt text",
                    ),
                ),
                (
                    "tile_image",
                    adhocracy4.images.fields.ConfiguredImageField(
                        "tileimage",
                        blank=True,
                        help_prefix="The image will be shown in the project tile.",
                        max_length=300,
                        upload_to="projects/tiles/%Y/%m/%d/",
                        verbose_name="Tile image",
                    ),
                ),
                (
                    "tile_image_copyright",
                    adhocracy4.images.fields.ImageCopyrightField(
                        blank=True,
                        help_text="Copyright shown in the Tile image.",
                        max_length=120,
                        verbose_name="Tile image copyright",
                    ),
                ),
                (
                    "tile_image_alt_text",
                    adhocracy4.images.fields.ImageAltTextField(
                        blank=True,
                        help_text="An alternate text serves as a textual description of the image content and is read out by screen readers. Describe the image in max. 80 characters. Example: A busy square with people in summer.",
                        max_length=80,
                        verbose_name="Tile image alt text",
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False,
                        help_text="Archived projects are not shown in the project overview. For project initiators they are still visible in the dashboard.",
                        verbose_name="Project is archived",
                    ),
                ),
                (
                    "project_type",
                    models.CharField(
                        blank=True, default="a4projects.Project", max_length=256
                    ),
                ),
                ("is_app_accessible", models.BooleanField(default=False)),
                (
                    "administrative_district",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="a4administrative_districts.administrativedistrict",
                        verbose_name="Administrative district",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="auth.group",
                    ),
                ),
                (
                    "moderators",
                    models.ManyToManyField(
                        blank=True,
                        related_name="project_moderator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.A4_ORGANISATIONS_MODEL,
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="project_participant",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("topics", models.ManyToManyField(to="a4projects.topic")),
            ],
            options={
                "ordering": ["-created"],
            },
            bases=(
                models.Model,
                adhocracy4.projects.models.ModuleClusterPropertiesMixin,
                adhocracy4.projects.models.TimelinePropertiesMixin,
            ),
        ),
    ]
